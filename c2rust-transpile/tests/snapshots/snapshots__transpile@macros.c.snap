---
source: c2rust-transpile/tests/snapshots.rs
expression: cat tests/snapshots/macros.rs
input_file: c2rust-transpile/tests/snapshots/macros.c
---
#![allow(
    dead_code,
    mutable_transmutes,
    non_camel_case_types,
    non_snake_case,
    non_upper_case_globals,
    unused_assignments,
    unused_mut
)]
extern "C" {
    fn extern_fn() -> std::ffi::c_int;
}
pub type U64 = std::ffi::c_ulonglong;
#[derive(Copy, Clone)]
#[repr(C)]
pub struct fn_ptrs {
    pub v: *mut std::ffi::c_void,
    pub fn1: Option<unsafe extern "C" fn() -> std::ffi::c_int>,
    pub fn2: Option<unsafe extern "C" fn(std::ffi::c_int) -> std::ffi::c_int>,
}
pub type zstd_platform_dependent_type = std::ffi::c_long;
#[no_mangle]
pub unsafe extern "C" fn test_fn_macro(mut x: std::ffi::c_int) -> std::ffi::c_int {
    return x * x;
}
#[no_mangle]
pub unsafe extern "C" fn reference_define() -> std::ffi::c_int {
    let mut x: std::ffi::c_int = 1 as std::ffi::c_int;
    x += 2 as std::ffi::c_int;
    if (3 as std::ffi::c_int) < (2 as std::ffi::c_int + 1 as std::ffi::c_int) * 3 as std::ffi::c_int
    {
        x += (2 as std::ffi::c_int + 1 as std::ffi::c_int) * 3 as std::ffi::c_int;
    }
    return x;
}
#[no_mangle]
pub static mut fns: fn_ptrs = {
    let mut init = fn_ptrs {
        v: 0 as *const std::ffi::c_void as *mut std::ffi::c_void,
        fn1: None,
        fn2: None,
    };
    init
};
#[no_mangle]
pub static mut p: *const fn_ptrs = unsafe { &fns as *const fn_ptrs };
#[no_mangle]
pub unsafe extern "C" fn test_zstd() -> U64 {
    return (if ::core::mem::size_of::<zstd_platform_dependent_type>() as std::ffi::c_ulong
        == 4 as std::ffi::c_ulong
    {
        30 as std::ffi::c_int
    } else {
        31 as std::ffi::c_int
    }) as U64;
}
#[no_mangle]
pub unsafe extern "C" fn stmt_expr_inc() -> std::ffi::c_int {
    let mut a: std::ffi::c_int = 0 as std::ffi::c_int;
    let mut b: *mut std::ffi::c_int = &mut a;
    ({
        *b += 1;
        *b;
        *b;
        *b
    });
    return ({
        *b += 1;
        *b;
        *b
    });
}
#[no_mangle]
pub unsafe extern "C" fn test_switch(mut x: std::ffi::c_int) -> std::ffi::c_int {
    match x {
        1 => return 10 as std::ffi::c_int,
        2 => return 20 as std::ffi::c_int,
        _ => {}
    }
    return 0 as std::ffi::c_int;
}
#[no_mangle]
pub unsafe extern "C" fn test_silk_int16_MIN() -> std::ffi::c_int {
    let mut _null: std::ffi::c_char =
        (*::core::mem::transmute::<&[u8; 1], &[std::ffi::c_char; 1]>(b"\0"))[(0x8000
            as std::ffi::c_int
            as std::ffi::c_short
            as std::ffi::c_int
            + 0x8000 as std::ffi::c_int)
            as usize];
    return 0x8000 as std::ffi::c_int as std::ffi::c_short as std::ffi::c_int;
}
#[no_mangle]
pub unsafe extern "C" fn use_extern_value() -> std::ffi::c_int {
    return extern_fn();
}
#[no_mangle]
pub unsafe extern "C" fn local_fn() -> std::ffi::c_int {
    return 1234 as std::ffi::c_int;
}
#[no_mangle]
pub unsafe extern "C" fn use_local_value() -> std::ffi::c_int {
    return local_fn();
}
